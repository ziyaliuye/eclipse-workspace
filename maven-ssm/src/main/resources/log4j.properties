# 全局日志输入级别， 下面的级别只能比这个低不能比这个高（例如这里设置ERROE， 下面设置INFO， 日志也只会显示ERROR）
# 级别后面跟的是输入位置 CONSOLE(控制台)、LOGFILE(输出到文件) 、stdout(标准输出)
log4j.rootLogger=DEBUG, CONSOLE, LOGFILE

# MyBatis 日志输出控制
log4j.logger.cn.mybatis.mydemo.mapper.PersonMapper=DEBUG
log4j.logger.cn.mybatis.mydemo.mapper.CardMapper=DEBUG

log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
# 控制台输出格式控制
log4j.appender.CONSOLE.layout.ConversionPattern=%5p [%t] - %C %p  %m %n

# shiro 日志输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m %n

# 日志输出文件控制， 全局日志控制必须开启  LOGFILE
log	=org.apache.log4j.FileAppender
# 输出文件位置
log4j.appender.LOGFILE.File=D:/my.log
# 是否追加到文件末尾  false 表示每次新建文件
log4j.appender.LOGFILE.Append=true
log4j.appender.LOGFILE.layout=org.apache.log4j.PatternLayout
# 文件输出日志格式控制
log4j.appender.LOGFILE.layout.ConversionPattern=%5p [%t] - %C %p  %m %n

# 设置某个局部内容打印级别（具体什么级别看路径， 例如 cn.cnm 就是包级别）
log4j.logger.cn.cnm.PeopleMapper=DEBUG
