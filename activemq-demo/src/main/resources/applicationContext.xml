<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 自动扫描 -->
	<context:component-scan
		base-package="cn.cnm.springmq">
	</context:component-scan>

	<!-- 配置生产者工厂 -->
	<bean id="jmsFactory"
		class="org.apache.activemq.pool.PooledConnectionFactory"
		destroy-method="stop">
		<property name="connectionFactory">
			<!-- 真正可以生产Connection的ConnectionFactory， 由对应的JMS服务厂商提供 -->
			<bean class="org.apache.activemq.ActiveMQConnectionFactory">
				<property name="brokerURL"
					value="tcp://192.168.58.128:61616"></property>
			</bean>
		</property>
		<!-- 最大连接数 -->
		<property name="maxConnections" value="100"></property>
	</bean>

	<!-- 队列的目的地， 点对点 -->
	<bean id="destinationQueue"
		class="org.apache.activemq.command.ActiveMQQueue">
		<!-- 使用Spring的构造步入创建队列， 并指定名称 -->
		<constructor-arg index="0" value="spring-active-queue" />
	</bean>
	<!-- 主题的目的地， 1对多 -->
	<bean id="desinationTopic"
		class="org.apache.activemq.command.ActiveMQTopic">
		<!-- 使用Spring的构造步入创建主题队列， 并指定名称 -->
		<constructor-arg index="0" value="spring-active-topic" />
	</bean>

	<!-- 自定义的监听器实现类 -->
	<bean id="myMessageListener"
		class="cn.cnm.springmq.MyMessageListener"></bean>

	<!-- 消费者监听器配置 -->
	<bean id="jmsContainer"
		class="org.springframework.jms.listener.DefaultMessageListenerContainer">
		<property name="connectionFactory" ref="jmsFactory" />
		<!-- 目的地要匹配， 不然Spring可不知道是队列还是主题 -->
		<property name="destination" ref="desinationTopic" />
		<!-- 这里需要自己编写一个监听器实现类， 然后将其注入进来并绑定到这里 -->
		<property name="messageListener" ref="myMessageListener" />
	</bean>

	<!-- Spring提供的JMS工具类， 进行消息发送、接收等操作 -->
	<bean id="jmsTemplate"
		class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="jmsFactory" />
		<property name="defaultDestination" ref="desinationTopic" />
		<!-- 消息类型转换， Spring底层做了一些适配和转换 -->
		<property name="messageConverter">
			<bean
				class="org.springframework.jms.support.converter.SimpleMessageConverter"></bean>
		</property>
	</bean>
</beans>